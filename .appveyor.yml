branches:
  only:
    - master
      #   - devel

# # Do not build on tags (GitHub and BitBucket)
# skip_tags: true

# # Start builds on tags only (GitHub and BitBucket)
# skip_non_tags: true

 #continuous

# Including commits with particular message or from specific user
only_commits:
  #message: /build/                # Start a new build if message contains 'build'
  author: dimitris.kalamaras@gmail.com      # Start a new build for commit of user with email jack@company.com

# clone directory
clone_folder: c:\projects\socnetv

install:
  - cmd: echo "Setting Qt environment..."
  - set QTDIR=C:\Qt\5.12.1\mingw73_64
#  - cmd: echo "Check Qt folders..."      
#  - cmd: dir C:\Qt\Tools
#  - cmd: dir C:\Qt\Tools\mingw730_64\bin
#  - cmd: dir C:\Qt\5.12.1\mingw73_64
#  - cmd: dir C:\Qt\5.12.1\mingw73_64\bin
#  - cmd: dir C:\Qt\5.12.1\mingw73_64\plugins  
  - cmd: echo "Check project folder..."        
  - cmd: dir C:\projects\socnetv  
  - cmd: echo "Installing Innosetup..."  
  - choco install -y InnoSetup
  - cmd: echo "Setting paths..."    
  - set PATH=%QTDIR%\bin;C:\Qt\Tools\mingw730_64\bin;%PATH%;"C:\Program Files (x86)\Inno Setup 5"
build_script:
  - cmd: echo "Running qmake..."  
  - qmake socnetv.pro
  - cmd: echo "BUILDING starts here with mingw32..."    
  - mingw32-make

after_build:
  - cmd: echo "check folder contents"
  - cmd: dir C:\projects
  - cmd: dir C:\projects\socnetv
  - cmd: dir C:\projects\socnetv\release  
  - cmd: echo "Executing windeployqt"
  - windeployqt release/socnetv.exe
  - cmd: echo "check folder contents again..."
  - cmd: dir C:\projects\socnetv\release  

  # - cmd: cp win32/KArchive/lib/libKF5Archive.dll.a release"
  # - cmd: cp win32/KArchive/bin/libKF5Archive.dll release"
  # - cmd: cp win32/zlib1.dll release"
  # - cmd: cp win32/liblzma-5.dll release"
  # - cmd: cp win32/libbz2-1.dll release"
  - cmd: cp COPYING release/LICENSE.txt"
  - cmd: echo "Running Innosetup..."
  - iscc innosetup.iss
  - cmd: type Setup-Manifest.txt
  - cmd: echo "Deleting *.o and *.cpp..."  
  - rm release/*.o
  - rm release/*.cpp
  - cmd: echo "check project folder contents again..."
  - cmd: dir C:\projects\socnetv
  - cmd: dir C:\projects\socnetv\release  

artifacts:
  - path: SocNetV-*-windows-installer.exe
#   - path: release
#     #type: zip


deploy: 
# Deploy to GitHub Releases
  provider: GitHub
  description: 'Release description'
  artifact: /SocNetV.*installer\.exe/           # upload all NuGet packages to release assets
  draft: true
  prerelease: false
  on:
    branch: master                # release from master branch only
    APPVEYOR_REPO_TAG: false      # deploy on tag push only
